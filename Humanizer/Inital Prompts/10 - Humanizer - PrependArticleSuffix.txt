Create a test class using the MSTest framework to test the PrependArticleSuffix method from the EnglishArticle class. The goal is to validate the method's functionality across different scenarios, including typical and edge cases, ensuring it handles both valid and invalid inputs appropriately.

The method to be tested is:

namespace Humanizer;

/// <summary>
/// Contains methods for removing, appending and prepending article prefixes for sorting strings ignoring the article.
/// </summary>
public static class EnglishArticle
{
    static readonly Regex _regex = new("^((The)|(the)|(a)|(A)|(An)|(an))\\s\\w+", RegexOptions.Compiled);

    /// <summary>
    /// Removes the previously appended article and prepends it to the same string.
    /// </summary>
    /// <param name="appended">Sorted string array</param>
    /// <returns>String array</returns>
    public static string[] PrependArticleSuffix(string[] appended)
    {
        var inserted = new string[appended.Length];
        var the = " the".AsSpan();
        var an = " an".AsSpan();
        var a = " a".AsSpan();

        for (var i = 0; i < appended.Length; i++)
        {
            var append = appended[i]
                .AsSpan();
            if (append.EndsWith(the, StringComparison.OrdinalIgnoreCase))
            {
                inserted[i] = ToOriginalFormat(append, 3);
            }
            else if (append.EndsWith(an, StringComparison.OrdinalIgnoreCase))
            {
                inserted[i] = ToOriginalFormat(append, 2);
            }
            else if (append.EndsWith(a, StringComparison.OrdinalIgnoreCase))
            {
                inserted[i] = ToOriginalFormat(append, 1);
            }
            else
            {
                inserted[i] = appended[i];
            }
        }

        return inserted;
    }
}

Here are additional project-specific details referenced in the method:

ToOriginalFormat: static string ToOriginalFormat(CharSpan value, int suffixLength) =>
        $"{value[^suffixLength..]} {value[..^(suffixLength + 1)]}"; --> Is Part of EnglishArticle Class

