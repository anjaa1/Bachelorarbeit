The generated MSTest test compiles but fails during execution. Please correct the tests to fulfill the initial task.

Generated Test:
Below is the generated MSTest test that does not compile:
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace MathNet.Numerics.Tests
{
    [TestClass]
    public class ArrayStatisticsTests
    {
        [TestMethod]
        public void QuantileInplace_EdgeCase_NullArray()
        {
            // Arrange
            double[] data = null;
            double tau = 0.5;

            // Act and Assert
            Assert.ThrowsException<ArgumentNullException>(() => MathNet.Numerics.Statistics.ArrayStatistics.QuantileInplace(data, tau));
        }
	}
}

Error Messages:
Here are the error messages reported by the IDE:
Assert.ThrowsException failed. Threw exception NullReferenceException, but exception ArgumentNullException was expected. 
Exception Message: Object reference not set to an instance of an object.

Inital Task:
Here is the inital Task that was provided for generating the test:
Create a test class using the MSTest framework to test the QuantileInplace method from the ArrayStatistics class. The goal is to validate the method's functionality across different scenarios, including typical and edge cases, ensuring it handles both valid and invalid inputs appropriately.

The method to be tested is:

using System;

namespace MathNet.Numerics.Statistics
{
    /// <summary>
    /// Statistics operating on arrays assumed to be unsorted.
    /// WARNING: Methods with the Inplace-suffix may modify the data array by reordering its entries.
    /// </summary>
    /// <seealso cref="SortedArrayStatistics"/>
    /// <seealso cref="StreamingStatistics"/>
    /// <seealso cref="Statistics"/>
    public static partial class ArrayStatistics
    {
        /// <summary>
        /// Estimates the tau-th quantile from the unsorted data array.
        /// The tau-th quantile is the data value where the cumulative distribution
        /// function crosses tau.
        /// Approximately median-unbiased regardless of the sample distribution (R8).
        /// WARNING: Works inplace and can thus causes the data array to be reordered.
        /// </summary>
        /// <param name="data">Sample array, no sorting is assumed. Will be reordered.</param>
        /// <param name="tau">Quantile selector, between 0.0 and 1.0 (inclusive).</param>
        /// <remarks>
        /// R-8, SciPy-(1/3,1/3):
        /// Linear interpolation of the approximate medians for order statistics.
        /// When tau &lt; (2/3) / (N + 1/3), use x1. When tau &gt;= (N - 1/3) / (N + 1/3), use xN.
        /// </remarks>
        public static double QuantileInplace(double[] data, double tau)
        {
            if (tau < 0d || tau > 1d || data.Length == 0)
            {
                return double.NaN;
            }

            double h = (data.Length + 1d/3d)*tau + 1d/3d;
            var hf = (int)h;

            if (hf <= 0 || tau == 0d)
            {
                return Minimum(data);
            }

            if (hf >= data.Length || tau == 1d)
            {
                return Maximum(data);
            }

            var a = SelectInplace(data, hf - 1);
            var b = SelectInplace(data, hf);
            return a + (h - hf)*(b - a);
        }
	}
}
